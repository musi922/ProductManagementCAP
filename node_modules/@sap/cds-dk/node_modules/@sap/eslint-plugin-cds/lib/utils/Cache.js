'use strict'


class Cache {
  #entries = new Map()

  has (key) {
    return this.#entries.has(key)
  }
  set (key, value) {
    return this.#entries.set(key, [value, Date.now()])
  }
  get (key) {
    return this.#entries.has(key) ? this.#entries.get(key)[0] : undefined
  }
  dump () {
    const dump = {}
    for (const [key, value] of this.#entries.entries()) {
      const timestamp = new Date(value[1])
      dump[key] = { key, value: value[0], timestamp }
    }
    return JSON.stringify(dump, null, 2)
  }
  remove (key) {
    if (this.#entries.has(key)) {
      this.#entries.delete(key)
    }
  }
  clear () {
    this.#entries.clear()
  }
}


module.exports = {
  Cache,
  globalCache: new Cache(),
}
